from Crypto.Util.number import *

# flag = b'NSSCTF{******}' + b'1'*100

# p = getPrime(256)
# q = getPrime(256)
# n = (p**3) * q
# e = 65537
# phi = (p-1)*(q-1)

# m = bytes_to_long(flag)

# c = pow(m, e, n)

# print(f'p = {p}')
# print(f'q = {q}')
# print(f'e = {e}')
# print(f'c = {c}')

p = 80505091208742938705306670241621545375764148093711243653439069254008824979403
q = 67599990875658931406915486208971556223245451500927259766683936131876689508521
e = 65537
c = 7958690969908064264211283192959937430539613460471121984649054121171267262097603091410178042319139582772142226087020110084551158367679146616732446561228522673699836019156243452069036383047309578614662564794584927846163157472211089368697387945469398750955336949678910159585015004994620777231073804301249774041

n = p**3 * q
phi = p**2 * (p - 1) * (q - 1)
d = inverse(e, phi)
m = pow(c, d, n)
print(long_to_bytes(m))
