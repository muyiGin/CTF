from Crypto.Util.number import *

# flag = b'NSSCTF{******}'

# p = getPrime(512)
# q = getPrime(512)

# n = p*q
# e1 = getPrime(16)
# e2 = getPrime(16)

# m = bytes_to_long(flag)

# c1 = pow(m, e1, n)
# c2 = pow(m, e2, n)

# print(f'n = {n}')
# print(f'e1 = {e1}')
# print(f'e2 = {e2}')
# print(f'c1 = {c1}')
# print(f'c2 = {c2}')

n = 120294155186626082670474649118722298040433501930335450479777638508444129059776534554344361441717048531505985491664356283524886091709370969857047470362547600390987665105196367975719516115980157839088766927450099353377496192206005171597109864609567336679138620134544004766539483664270351472198486955623315909571
e1 = 38317
e2 = 63409
c1 = 42703138696187395030337205860503270214353151588149506110731264952595193757235229215067638858431493587093612397165407221394174690263691095324298012134779703041752810028935711214038835584823385108771901216441784673199846041109074467177891680923593206326788523158180637665813642688824593788192044139055552031622
c2 = 50460092786111470408945316270086812807230253234809303694007902628924057713984397041141665125615735752600114964852157684904429928771531639899496987905067366415806771003121954852465731110629459725994454904159277228514337278105207721011579794604761255522391446534458815389983562890631994726687526070228315925638


def exGCD(a, b):
    if b == 0:
        return 1, 0
    x, y = exGCD(b, a % b)
    return y, x - (a // b) * y


d1, d2 = exGCD(e1, e2)
m = (pow(c1, d1, n) * pow(c2, d2, n)) % n
print(long_to_bytes(m))
